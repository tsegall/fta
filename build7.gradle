buildscript {
  repositories {
    mavenCentral()
  }
}

plugins {
    id "java-library"
    id "jacoco"
    id "maven-publish"
    id "eclipse"
    id "application"
    id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
    id "com.github.ben-manes.versions" version "0.42.0"
}

configureVersions()

def configureVersions() {
  def versions = new Properties()
  versions.load(new FileInputStream("$project.rootDir/versions.properties"))
  versions.each { prop -> project.ext.set(prop.key, prop.value) }
}

// We should always build a Java 8 compatible library
if (JavaVersion.current().java9Compatible) {
  project.afterEvaluate {
    tasks.withType(JavaCompile) {
      options.compilerArgs.addAll(['--release', 8])
    }
  }
}

mainClassName = "com.cobber.fta.driver.Driver"

group = "com.cobber.fta"
archivesBaseName = "fta"
version = "4.5.11"

nexusPublishing {
    repositories {
        sonatype()
    }
}

repositories {
  mavenCentral()
}

test {
  // enable TestNG support (default is JUnit)
  useTestNG()
  dependsOn cleanTest
  testLogging.showStandardStreams = true
}

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

tasks.withType(Test) {
  systemProperty "file.encoding", "UTF-8"
}

javadoc.options.encoding = 'UTF-8'

java {
    withSourcesJar()
    withJavadocJar()
}

artifacts {
  archives javadocJar, sourcesJar
}

jar {
    manifest {
        attributes(
            'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
	    'Implementation-Version': "${version}"
        )
    }
}

dependencies {
  implementation group: 'com.univocity', name: 'univocity-parsers', version: "${univocityVersion}"
  implementation group: 'com.sun.mail', name: 'javax.mail', version: "${javaxMailApiVersion}"
  implementation group: 'commons-validator', name: 'commons-validator', version: "${commonsValidatorVersion}"
  implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: "${jacksonDatabindVersion}"
  implementation group: 'com.googlecode.libphonenumber', name: 'libphonenumber', version: "${googlePhoneNumberVersion}"
  implementation group: 'org.apache.commons', name: 'commons-text', version: "${commonsTextVersion}"
  implementation group: 'com.github.krraghavan', name: 'xeger', version: "${xegerVersion}"
  implementation group: 'org.slf4j', name: 'slf4j-api', version: "${slf4jApiVersion}"
  implementation group: 'com.google.guava', name: 'guava', version: "${guavaVersion}"

  testImplementation group: 'org.testng', name: 'testng', version: "${testngVersion}"
  testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: "${logbackClassicVersion}"
}

jacocoTestReport {
    group = "Reporting"
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/reports/coverage")
    }
    afterEvaluate {
        classDirectories.from = files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['**/Driver**'])
        })
    }
}
